<h3>Experimental: Encapsulated Tasks</h3>

<p>
  Normally, you define tasks by passing a generator function to <code>task(...)</code>.
  Often though, you want to be able to expose additional state of the task,
  e.g. you might want to show the percentage progress of an <code>uploadFile</code> task,
  but unless you're using the techniques describes below there's no good
  place to expose that data to the template other than to set some properties
  on the host object, but then you lose a lot of the benefits of encapsulation
  in the process.
</p>

<p>
  In cases like these, you can use Encapsulated Tasks, which behave just
  like regular tasks, except that they don't have access to the object
  they're attached to, but rather can only set properties (or emit events)
  on themselves. Defining Encapsulated Tasks is easy: instead of passing
  a generator function directly to <code>task(...)</code>, you pass an
  object with a <code>perform</code> method.
</p>

{{code-snippet name="encapsulated-task.js"}}

<p>




  pass an object with a
  <code>perform</code> method to the <code>task(...)</code> function


  instead of passing
  a generator function to <code>task(...)</code>, you pass an object
  with a <code>perform</code> method.

  , which are objects with
  a <code>perform</code> method and other state that you can use in the
  place of the generator function you normally supply to <code>task()</code>.
  When you use a EncapsulatedTask, the value of <code>this</code> in the <code>perform</code>
  generator function is the EncapsulatedTask object, which means it's a good place to
  set encapsulated values specific to that running task instance.
</p>

<h3>Live Example</h3>

{{! BEGIN-SNIPPET encapsulated-task-template }}
<p>
  <button onclick={{perform uploadFile makeRandomUrl}}>
    Start Upload
  </button>
</p>

<h5>Queued Uploads: {{uploadFile.numQueued}}</h5>

{{#if uploadFile.last}}
  <h5>
    Uploading to {{uploadFile.last.url}}:
    {{uploadFile.last.progress}}%
  </h5>
{{/if}}

{{#if uploadFile.lastSuccessful}}
  <h5 style="color: green;">
    <strong>
    Upload to {{uploadFile.lastSuccessful.url}}:
    {{uploadFile.lastSuccessful.value}}
    </strong>
  </h5>
{{/if}}

{{! END-SNIPPET }}

{{code-snippet name="encapsulated-task-controller.js"}}
{{code-snippet name="encapsulated-task-template.hbs"}}

