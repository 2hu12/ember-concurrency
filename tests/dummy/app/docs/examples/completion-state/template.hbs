<h3>Beta: Completion State</h3>

<p>
  If you want to display the result of a task (e.g. displaying a success
  or "Try Again" banner), generally speaking, you have two options:
</p>

<ol>
  <li><code>.set</code> the success or error result to some property from within the task</li>
  <li>Use the Completion State properties automatically supplied by the Task object,
      as described below.</li>
</ol>

<h4>TaskInstance.value and TaskInstance.error</h4>

<p>
  The value returned from <code>someTask.perform()</code> is
  a <em>TaskInstance</em> &mdash; a single execution of that task.
  When a TaskInstance finishes running, it will set one of two
  properties, depending on whether it ran to completion, was canceled,
  or an error was thrown:
</p>

<ul>
  <li><code>.value</code>: the value returned from the task</li>
  <li><code>.error</code>: the error thrown from the task or a TaskCancelation error</li>
</ul>

<p>
  Assuming you've saved the TaskInstance returned from a <code>.perform()</code>
  to some property that the template can see, you could use
  <code>.value</code> or <code>.error</code> to display success or error
  banners, e.g. when a form is submitted. But while there may be some use
  cases that require manually stashing the TaskInstance, Task objects
  already expose properties that give you access to that TaskInstance
  so that you don't have to stash it yourself.
</p>

<h4>TaskInstance properties on the Task object</h4>

<p>
  The Task object, in addition to exposing helpful properties like
  <code>isRunning</code> and <code>isIdle</code>, exposes a handful
  of properties to point to TaskInstances that have been performed.
  Because there are many different use cases for when to display and hide
  success and error UI, there cannot just be one single property to
  rule them all, but the following list has been ordered by the
  most common task instances you'd want to use.
</p>

<ul>
  <li>
    <strong>last</strong>: this points to the most recent TaskInstance that
    started running (so any <code>drop</code>ped task instances won't show up here,
    and <code>enqueue</code>d task instances will only show up once they start
    running). <code>myTask.last.value</code> and <code>myTask.last.error</code>
    start off null when the task instance starts running, and then get set
    when the task instance returns/throws/is canceled.
  </li>
  <li>
    <strong>lastSuccessful</strong>: this gets set when the task
    runs to completion, i.e. it returned a value.
    <code>myTask.lastSuccessful.value</code> is the value returned from
    the most recent <code>myTask.perform</code>.
  </li>
  <li>
    <strong>lastErrored</strong>: this gets set when the task
    threw an error (or yielded a promise that rejected).
    <code>myTask.lastErrored.error</code> is the error of the
    the most recent <code>myTask.perform</code>.
  </li>
  <li>
    The other less common properties available are
    <strong>lastComplete</strong>, <strong>lastPerformed</strong>,
    <strong>lastIncomplete</strong>, and <strong>lastCanceled</strong>.
  </li>
</ul>

<h3>Live Example</h3>

<p>
  {{input type="checkbox" checked=showLessCommon}} Show less common properties
</p>

{{#each tasks as |taskName|}}
  {{#with (get this taskName) as |task|}}
    <h5>{{task.name}}</h5>

    <p>
      <button onclick={{perform task false}}
        class={{if task.isIdle 'button-primary'}}>
        Run to Completion
      </button>
      <button onclick={{perform task true}}
        class={{if task.isIdle 'button-primary'}}>
        Run until Error
      </button>
      <button onclick={{cancel-all task}}
        class={{if task.isRunning 'button-primary'}}>
        Cancel
      </button>
    </p>

    <table class="u-full-width completion-state-table">
      <thead>
        <tr>
          <th>Completion Property</th>
          <th>.value</th>
          <th>.error</th>
        </tr>
      </thead>
      <tbody>
        {{#each taskProperties as |tp|}}
        <tr>
          <td>
            <strong>myTask.{{tp}}</strong>
          </td>
          <td>
            {{#with (get task (concat tp '.value')) as |v|}}
              <div class="completion-status completion-success">{{v}}</div>
            {{/with}}
          </td>
          <td>
            {{#with (get task (concat tp '.error')) as |v|}}
              <div class="completion-status completion-error">{{v}}</div>
            {{/with}}
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
    <br />
  {{/with}}
{{/each}}

